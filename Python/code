
def calculate_hash(s, start, end):
    hash_value = 0
    prime = 101  
    for i in range(start, end + 1):
        hash_value = (hash_value * 256 + ord(s[i])) % prime
    return hash_value

def search_rabin_karp(text, pattern):
    text_length = len(text)
    pattern_length = len(pattern)
    prime = 101 

    
    pattern_hash = calculate_hash(pattern, 0, pattern_length - 1)
    text_hash = calculate_hash(text, 0, pattern_length - 1)

    for i in range(text_length - pattern_length + 1):
        
        if pattern_hash == text_hash:
            match = True
            for j in range(pattern_length):
                if text[i + j] != pattern[j]:
                    match = False
                    break
            if match:
                print("Pattern found at index", i)

        # Update the hash value for the next substring
        if i < text_length - pattern_length:
            text_hash = (text_hash - ord(text[i]) * (256 ** (pattern_length - 1))) % prime
            text_hash = (text_hash * 256 + ord(text[i + pattern_length])) % prime

filename = input("Enter the name of the CSV file: ")
with open(filename, 'r') as file:
    for line in file:
        text, pattern = line.strip().split(',')
        print("Text:", text)
        print("Pattern:", pattern)
        print("Indices where pattern is found:")
        search_rabin_karp(text, pattern)
